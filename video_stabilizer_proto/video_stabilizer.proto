syntax = "proto3";

package video_stabilizer;

service VideoStabilizer {
 rpc Stabilize(StabilizeRequest) returns (StabilizeResponse) {}
}

message StabilizeRequestFrameData {
   bytes frame_image = 1;
   bytes prev_frame = 2;
   bytes features = 3;
   bytes trajectory = 4;
   int32 padding = 5;
   bytes transforms = 6;
   int32 frame_index = 7;
   int32 radius = 8;
}

message StabilizeRequest {
   oneof request_type {
      StabilizeRequestFrameData stabilize_frame_data = 1;
      string stabilize_request_json_key = 2;
   }
   int32 process_mode = 3;
}

message StabilizeResponseFrameData {
   bytes final_transform = 1;
   bytes features = 2;
   bytes trajectory = 3;
   bytes transforms = 4;
}

message StabilizeResponse {
   oneof response_type {
      StabilizeResponseFrameData stabilize_frame_data = 1;
      string stabilize_response_json_key = 2;
   }
}

service Flow {
 rpc Flow(FlowRequest) returns (FlowResponse) {}
}

message FlowRequestFrameData {
   bytes prev_frame = 1;
   bytes frame_image = 2;
   bytes features = 3;
}

message FlowRequest {
   oneof request_type {
      FlowRequestFrameData flow_frame_data = 1;
      string flow_request_json_key = 2;
   }
   int32 process_mode = 4;
}

message FlowResponseFrameData {
   bytes transform = 1;
   bytes features = 2;
}

message FlowResponse {
   oneof response_type {
      FlowResponseFrameData flow_frame_data = 1;
      string flow_response_json_key = 2;
   }
}

service CumSum {
 rpc CumSum(CumSumRequest) returns (CumSumResponse) {}
}

message CumSumRequestFrameData {
   bytes trajectory_element = 1;
   bytes transform = 2;
}

message CumSumRequest {
   oneof request_type {
      CumSumRequestFrameData cumsum_frame_data = 1;
      string cumsum_request_json_key = 2;
   }
   int32 process_mode = 3;
}

message CumSumResponse {
 oneof sum_oneof {
    bytes sum = 1;
    string cumsum_response_json_key = 2;
 }
}

service Smooth {
 rpc Smooth(SmoothRequest) returns (SmoothResponse) {}
}

message SmoothRequestFrameData {
   bytes transforms_element = 1;
   bytes trajectory_element = 2;
   bytes trajectory = 3;
}

message SmoothRequest {
 oneof request_type {
   SmoothRequestFrameData smooth_frame_data = 1;
   string smooth_request_json_key = 2;
 }
 int32 process_mode = 3;
}

message SmoothResponse {
 oneof final_transform_oneof {
    bytes final_transform = 1;
    string smooth_response_json_key = 2;
 }
}